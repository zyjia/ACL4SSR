#---------------------------------------------------#
# 配置文件需要放置在 $HOME/.config/clash/config.yml
# 或者运行目录下的config.yml
#---------------------------------------------------#
# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7890

# HTTP 代理端口
# port: 7890

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)
# redir-port: 7892

allow-lan: true # 允许局域网连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 clash 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: strict

# 规则匹配模型(rule/global/direct)
mode: rule

# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
ipv6: true

# 统一延迟, 更换延迟计算方式,去除握手等额外延迟
unified-delay: false
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# RESTful API 监听地址
external-controller: '0.0.0.0:9090'
# API 的访问密钥
secret: '123456'
# 配置 WEB UI 目录，使用 http://{{external-controller}}/ui 访问
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

# GEO数据模式(更改geoip使用文件,mmdb或者dat,可选true / flase,true为dat,此项有默认值flase)
geodata-mode: true
# 自定义 geodata url
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

# 缓存
profile:
  # 储存 API 对策略组的选择，以供下次启动时使用
  store-selected: true
  # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"

tun:
  # 是否启用 tun 模式来路由全局流量。 
  enable: true
  # tun 模式堆栈,如无使用问题,建议使用 mixed栈,默认 gvisor;MacOS 用户推荐 gvisor 栈
  stack: mixed
  # dns 劫持,一般设置为 any:53 即可, 即劫持所有 53 端口的 udp 流量
  dns-hijack:
    - "any:53"
  # 自动设置全局路由,可以自动将全局流量路由进入 tun 网卡。
  auto-route: true
  # 自动选择流量出口接口,多出口网卡同时连接的设备建议手动指定出口网卡
  auto-detect-interface: true

# 使用系统的dns, 也就是dhcp服务器下发的dns服务地址(使用我自建的dns服务来分流)
dns:
  # 关闭将使用系统 DNS
  enable: true
  # 开启 DoH 支持 HTTP/3，将并发尝试
  prefer-h3: true   
  # 开启 DNS 服务器监听                    
  listen: :5353
  # false 将返回 AAAA 的空结果 
  ipv6: true
  # fake-ip or redir-host
  enhanced-mode: redir-host
  # fake-ip 池设置
  fake-ip-range: 28.0.0.1/8
  # 以下匹配项不返回 fake ip          
  fake-ip-filter:
    - "+.lan"
    - "+.local"
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  proxy-server-nameserver:
    - https://doh.pub/dns-query
  nameserver-policy:
    'geosite:cn': https://doh.pub/dns-query
  fallback:
    - "https://dns.cloudflare.com/dns-query#dns"
    - "https://dns.google/dns-query#dns"
  fallback-filter:
    geoip: true
    geoip-code: CN
    geosite:
      - gfw
      - geolocation-!cn
    domain:
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'
